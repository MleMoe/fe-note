import{_ as t,r as o,o as e,c,a as n,b as p,F as l,e as s,d as u}from"./app.d1630e5f.js";const i={},r=n("h1",{id:"\u7B2C\u4E00\u8BFE-todo-react",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B2C\u4E00\u8BFE-todo-react","aria-hidden":"true"},"#"),s(" \u7B2C\u4E00\u8BFE\uFF1ATodo React")],-1),k=n("p",null,"Todo React\uFF0C\u662F\u7EC4\u91CC\u524D\u8F88\u7ED9\u65B0\u4EBA\u5F00\u8BBE\u7684\u8BFE\u7A0B\u3002\u524D\u8F88\u8BB2\u8BFE\u8D85\u68D2\uFF0C\u501F\u7528\u4E00\u4E2A uu \u7684\u6BD4\u55BB\u6765\u8BF4\uFF0C\u5C31\u50CF\u662F\u5265\u6D0B\u8471\uFF0C\u4E00\u5C42\u4E00\u5C42\u7ED9\u4F60\u628A React \u8BB2\u6E05\u695A\u4E86\u3002\u8BA9\u4EBA\u53F9\u4E3A\u89C2\u6B62\uFF0C\u662F\u80FD\u8BA9\u6211\u5FCD\u4E0D\u4F4F\u505A\u7B14\u8BB0\u597D\u597D\u5B66\u4E60\u7684\u5730\u6B65\u4E86\u3002",-1),b=n("p",null,"\u8FD9\u91CC\u5C31\u8BB0\u5F55\u6211\u7684\u6536\u83B7\u4E0E\u7406\u89E3\u3002ps\uFF1A\u7B2C\u4E00\u6B21\u6210\u7A3F\u8F83\u4E3A\u6F66\u8349\uFF0C\u53EA\u8BB2\u4E86\u5927\u81F4\u6D41\u7A0B\uFF0C\u7EC6\u8282\u56E0\u4E3A\u65F6\u95F4\u5173\u7CFB\u6CA1\u6709\u8BE6\u5199\uFF0C\u4EE5\u540E\u4F1A\u7EE7\u7EED\u66F4\u65B0\u6539\u5584\uFF08\u4E0D\u5495\uFF09\u3002",-1),d=n("p",null,"\u90A3\u4E48\u5C31\u8BA9\u6211\u4EEC\u5F00\u59CB\u5427\uFF01",-1),m=n("h2",{id:"todo-list",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#todo-list","aria-hidden":"true"},"#"),s(" Todo List")],-1),g=s("\u672C\u6B21 React \u5B66\u4E60\u4F7F\u7528 Todo List \u4F5C\u4E3A\u793A\u4F8B\u8BB2\u8FF0\u3002Todo List \u662F\u4E00\u4E2A\u524D\u7AEF\u7ECF\u5178\u5B66\u4E60\u793A\u4F8B\uFF0C\u53EF\u4EE5\u5148\u770B\u4E0B"),f={href:"https://todomvc.com/examples/react/#/",target:"_blank",rel:"noopener noreferrer"},y=s("\u793A\u4F8B"),h=s("\u4E86\u89E3\u4E00\u4E0B Todo List\u3002"),w=s("\u8BE5\u793A\u4F8B\u9875\u9762\u6765\u81EA "),v={href:"https://github.com/tastejs/todomvc",target:"_blank",rel:"noopener noreferrer"},x=s("TodoMVC"),q=s("\uFF0Ca project which offers the same Todo application implemented using MVX concepts in most of the popular JavaScript MVX frameworks of today."),N=u(`<h3 id="\u9700\u6C42\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u9700\u6C42\u5206\u6790" aria-hidden="true">#</a> \u9700\u6C42\u5206\u6790</h3><p>\u4ECE\u793A\u4F8B\u53EF\u4EE5\u770B\u51FA\uFF0C\u4E00\u4E2A Todo List\uFF0C\u6211\u4EEC\u9700\u8981\u5B9E\u73B0\u51E0\u4E2A\u529F\u80FD\uFF1A</p><ul><li>\u663E\u793A\u4E8B\u9879</li><li>\u6309\u6761\u4EF6\u7B5B\u9009\u663E\u793A\u4E8B\u9879</li><li>\u589E\u52A0\u4E8B\u9879</li><li>\u5B8C\u6210\u4E8B\u9879</li><li>\u5220\u9664\u4E8B\u9879</li><li>\u66F4\u65B0\u4E8B\u9879</li><li>\u5168\u9009/\u5168\u4E0D\u9009</li></ul><p>\u4ECE\u6570\u636E\u9A71\u52A8\u6587\u6863\u7684\u89D2\u5EA6\u6765\u770B\uFF0C\u8FD9\u4E9B\u529F\u80FD\u5176\u5B9E\u662F\u4E00\u4E9B\u5BF9\u6570\u636E\u7684\u52A8\u4F5C\u3002\u52A8\u4F5C\u6539\u53D8\u6570\u636E\uFF0C\u518D\u6309\u7167\u6570\u636E\u5C06\u7F51\u9875\u6587\u6863\u6E32\u67D3\u3002\u6570\u636E\u53EF\u89C6\u5316\u9886\u57DF\u6709\u540D\u7684 D3.js \u4FBF\u662F\u8FD9\u79CD\u601D\u60F3\uFF08data drive document\uFF09\u3002</p><p>\u5BF9\u4E8E Todo \u6570\u636E\uFF0C\u6211\u4EEC\u9700\u8981\u6709\u4E00\u79CD\u65B9\u6CD5\u6765\u5C06\u4E4B\u5B58\u50A8\u3002\u5728\u6B64\u628A Todo \u5B58\u5728 localStorage \u4E2D\uFF0C\u5E76\u4F7F\u7528\u5355\u4F8B\u6A21\u5F0F\u6765\u521B\u5EFA\u548C\u83B7\u53D6\u5B83\u3002</p><p>\u5355\u4F8B\u6A21\u5F0F\u662F\u4E00\u79CD\u521B\u5EFA\u578B\u6A21\u5F0F\u3002\u5355\u4F8B\u7C7B\u4EC5\u6709\u552F\u4E00\u5B9E\u4F8B\uFF0C\u4E14\u81EA\u5DF1\u8D1F\u8D23\u521B\u5EFA\u81EA\u5DF1\u7684\u5B9E\u4F8B\uFF08\u65E0\u9700\u5916\u90E8 new \uFF09\uFF0C\u5E76\u63D0\u4F9B\u4E00\u4E2A\u8BBF\u95EE\u5B83\u7684\u5168\u5C40\u8BBF\u95EE\u70B9\u3002\u8BBF\u95EE\u65F6\u8BE5\u5355\u4F8B\u7C7B\u5224\u65AD\u662F\u5426\u5DF2\u7ECF\u6709\u8FD9\u4E2A\u5355\u4F8B\uFF0C\u5982\u679C\u6709\u5219\u8FD4\u56DE\uFF0C\u5982\u679C\u6CA1\u6709\u5219\u521B\u5EFA\u3002</p><p>\u5355\u4F8B\u6A21\u5F0F\u4E3B\u8981\u89E3\u51B3\uFF1A\u4E00\u4E2A\u5168\u5C40\u4F7F\u7528\u7684\u7C7B\u9891\u7E41\u5730\u521B\u5EFA\u4E0E\u9500\u6BC1\u3002\u5982\u679C\u60F3\u63A7\u5236\u5B9E\u4F8B\u6570\u76EE\uFF0C\u8282\u7701\u7CFB\u7EDF\u8D44\u6E90\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5355\u4F8B\u6A21\u5F0F\u3002</p><p>\u6CE8\u610F\uFF0C\u867D\u7136\u8BF4\u662F\u5355\u4F8B\u7C7B\uFF0C\u4F46\u662F\u5176\u5B9E\u51FD\u6570\u4E5F\u53EF\u4EE5\u3002</p><p>\u5355\u4F8B\u6A21\u5F0F\u793A\u4F8B\uFF0C\u6BD4\u5982 createStore \u51FD\u6570\uFF0C\u82E5\u5728 localStorage \u4E2D\u6709 cacheKey \u7684\u5B58\u50A8\u5185\u5BB9\uFF0C\u5219\u8FD4\u56DE\u8BE5\u76F8\u5173 state \u503C\uFF0C\u82E5\u4E0D\u5B58\u5728\uFF0C\u5219\u65B0\u5EFA\u3002\u53EF\u4EE5\u6CE8\u610F\u5230 react \u7EC4\u4EF6\u4E2D\u4E5F\u6709 state \u53D8\u91CF\uFF0C\u4F5C\u7528\u4E5F\u7C7B\u4F3C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token parameter">cacheKey<span class="token punctuation">,</span> onChange</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    cacheKey<span class="token punctuation">,</span>
    <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">(</span>cacheKey <span class="token operator">&amp;&amp;</span> <span class="token function">loadState</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">filterType</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">todoList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">loadState</span><span class="token punctuation">(</span><span class="token parameter">cacheKey</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;null&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u6570\u636E\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u683C\u5F0F" aria-hidden="true">#</a> \u6570\u636E\u683C\u5F0F</h3><p>\u7EA6\u5B9A\u6570\u636E\u683C\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Todo</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  done<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token comment">// localStorage</span>
<span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    filterType<span class="token operator">:</span> <span class="token string">&#39;active&#39;</span><span class="token operator">|</span><span class="token string">&#39;completed&#39;</span><span class="token operator">|</span><span class="token keyword">null</span><span class="token punctuation">,</span>
    todoList<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Todo<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="\u5DE5\u5177\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5177\u51FD\u6570" aria-hidden="true">#</a> \u5DE5\u5177\u51FD\u6570</h3><p>\u5148\u5B9E\u73B0\u4E00\u4E9B\u5FC5\u8981\u7684\u5DE5\u5177\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// utils.js</span>
<span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">&#39;jquery&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u589E</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">addTodo</span><span class="token punctuation">(</span><span class="token parameter">todoList<span class="token punctuation">,</span> text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>todoList<span class="token punctuation">,</span> <span class="token punctuation">{</span> text<span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">id</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5220</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">removeTodo</span><span class="token punctuation">(</span><span class="token parameter">todoList<span class="token punctuation">,</span> id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> todoList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> id <span class="token operator">!==</span> todo<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u66F4\u65B0\u67D0\u9879</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">updateTodo</span><span class="token punctuation">(</span><span class="token parameter">todoList<span class="token punctuation">,</span> id<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> todoList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    id <span class="token operator">===</span> todo<span class="token punctuation">.</span>id
      <span class="token operator">?</span> <span class="token punctuation">{</span>
          <span class="token operator">...</span>todo<span class="token punctuation">,</span>
          <span class="token operator">...</span>data<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
      <span class="token operator">:</span> todo
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6839\u636E id \u627E\u5230 \u67D0\u9879</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">findTodo</span><span class="token punctuation">(</span><span class="token parameter">todoList<span class="token punctuation">,</span> id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> todoList<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> id <span class="token operator">===</span> todo<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8BBE\u7F6E\u5168\u90E8\u72B6\u6001\uFF0C\u5168\u9009/\u5168\u4E0D\u9009</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">toggleTodoList</span><span class="token punctuation">(</span><span class="token parameter">todoList<span class="token punctuation">,</span> done</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> todoList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>todo<span class="token punctuation">,</span> done <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4ECE localStorage \u52A0\u8F7D Todo List \u6570\u636E</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">loadState</span><span class="token punctuation">(</span><span class="token parameter">cacheKey</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;null&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5C06 Todo List \u6570\u636E\u5B58\u5165 localStorage</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">saveState</span><span class="token punctuation">(</span><span class="token parameter">cacheKey<span class="token punctuation">,</span> state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5224\u65AD\u72B6\u6001\u662F\u5426\u6709\u6539\u53D8</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isChanged</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> newState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> newState
    <span class="token operator">?</span> <span class="token operator">!</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>newState<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>newState<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> state<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><h3 id="\u6570\u636E\u4ED3\u5E93" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u4ED3\u5E93" aria-hidden="true">#</a> \u6570\u636E\u4ED3\u5E93</h3><p>\u5728 createStore \u4E2D\u4F7F\u7528\u8FD9\u4E9B\u5DE5\u5177\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// store.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  addTodo<span class="token punctuation">,</span>
  findTodo<span class="token punctuation">,</span>
  removeTodo<span class="token punctuation">,</span>
  updateTodo<span class="token punctuation">,</span>
  toggleTodoList<span class="token punctuation">,</span>
  isChanged<span class="token punctuation">,</span>
  loadState<span class="token punctuation">,</span>
  saveState<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token parameter">cacheKey<span class="token punctuation">,</span> onChange</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    cacheKey<span class="token punctuation">,</span>

    <span class="token comment">// \u5355\u4F8B\u6A21\u5F0F\u5173\u952E</span>
    <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">(</span>cacheKey <span class="token operator">&amp;&amp;</span> <span class="token function">loadState</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">filterType</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">todoList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// \u6839\u636E this.state.filterType \u6765\u7B5B\u9009\u663E\u793A Todo</span>
    <span class="token comment">// get \u4E0D\u9700\u8981\u4F20\u53C2\u6570\uFF0C\u901A\u8FC7 .funName \u83B7\u53D6 return \u503C</span>
    <span class="token keyword">get</span> <span class="token function">filteredList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>filterType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token string">&#39;active&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token operator">!</span>todo<span class="token punctuation">.</span>done<span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token string">&#39;completed&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> todo<span class="token punctuation">.</span>done<span class="token punctuation">;</span>
          <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// \u83B7\u53D6\u672A\u505A\u4E8B\u9879\u6570\u76EE</span>
    <span class="token keyword">get</span> <span class="token function">leftCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> prev <span class="token operator">+</span> <span class="token punctuation">(</span>todo<span class="token punctuation">.</span>done <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// \u8BBE\u7F6E\u65B0 state</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5224\u65AD \u6709\u65E0\u6539\u53D8</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> newState<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u66F4\u65B0 this.state</span>
        Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> newState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u66F4\u65B0 localStorage</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// \u5916\u90E8\u64CD\u4F5C\u5206\u53D1</span>
    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      onChange <span class="token operator">&amp;&amp;</span>
        <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          type<span class="token punctuation">,</span>
          <span class="token operator">...</span>payload<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// \u6839\u636E this.state \u66F4\u65B0 storage</span>
    <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cacheKey <span class="token operator">&amp;&amp;</span> <span class="token function">saveState</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// \u6839\u636E id \u8FD4\u56DE todo item</span>
    <span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">findTodo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// \u6839\u636E id \u8FD4\u56DE\u5728\u7B5B\u9009\u7C7B\u522B\u4E2D\u7684 todo item</span>
    <span class="token function">findFiltered</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">findTodo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>filteredList<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>text<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">todoList</span><span class="token operator">:</span> <span class="token function">addTodo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> todo <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5BF9\u5916\u90E8\u7684\u54CD\u5E94</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span> todo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">remove</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">todoList</span><span class="token operator">:</span> <span class="token function">removeTodo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;remove&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">todoList</span><span class="token operator">:</span> <span class="token function">updateTodo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token punctuation">{</span> text <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> text <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">toggle</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> done <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">findTodo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">.</span>done<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">todoList</span><span class="token operator">:</span> <span class="token function">updateTodo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token punctuation">{</span> done <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;toggle&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> done <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">toggleAll</span><span class="token punctuation">(</span><span class="token parameter">allDone</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> done <span class="token operator">=</span> <span class="token keyword">typeof</span> allDone <span class="token operator">===</span> <span class="token string">&#39;boolean&#39;</span> <span class="token operator">?</span> allDone <span class="token operator">:</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>leftCount<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">todoList</span><span class="token operator">:</span> <span class="token function">toggleTodoList</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">,</span> done<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;toggleAll&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> done <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">filterType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> filterType <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;filter&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> filterType <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br></div></div><p>\u5185\u90E8\u7684\u6570\u636E\u4EA4\u4E92\uFF08storage \u4E0E state\uFF09\u5DF2\u7ECF\u5B8C\u5907\uFF0C\u5173\u952E\u70B9\u5230\u4E86 dispatch \u51FD\u6570\uFF0Cdispatch \u51FD\u6570\u91CC\u4F7F\u7528\u5230\u7684 onChange \u51FD\u6570\uFF0C\u662F\u5916\u90E8\u4F20\u8FDB\u6765\u7684\u52A8\u4F5C\uFF0C\u5728\u6709\u6570\u636E\u53D8\u52A8\u65F6\uFF0C\u6211\u4EEC\u8981\u4F7F\u7528\u5B83\u4F5C\u51FA\u54CD\u5E94\uFF08\u4F8B\u5982\u6839\u636E\u66F4\u65B0\u540E\u7684\u6570\u636E\u6765\u91CD\u65B0\u6E32\u67D3\u9875\u9762\uFF09\u3002\u6240\u4EE5\u5728 add \u3001remove \u7B49\u51FD\u6570\u4E2D\u90FD\u6709 <code>this.dispatch(type, data);</code> \u6267\u884C\u3002</p><h3 id="\u5185\u5BB9\u9875\u9762" tabindex="-1"><a class="header-anchor" href="#\u5185\u5BB9\u9875\u9762" aria-hidden="true">#</a> \u5185\u5BB9\u9875\u9762</h3><p>App.js \u4E3A\u4E3B\u8981\u5DE5\u4F5C\u9875\u9762\u3002\u5728\u6784\u9020\u51FD\u6570\u4E2D\u4F7F\u7528 createStore \u83B7\u53D6 store \u5373 todo list \u5185\u5BB9\u3002\u5176\u4F59\u903B\u8F91\u8BF7\u770B\u4E0B\u65B9\u7EC6\u5206\u9879\uFF1Areload\u3001template\u3001dom\u3001dom-diff\u3001virtual dom \u548C react\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// App.js</span>
<span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">&quot;jquery&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> cx <span class="token keyword">from</span> <span class="token string">&quot;classnames&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> createStore <span class="token keyword">from</span> <span class="token string">&quot;@/common/store&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>props <span class="token operator">=</span> props<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>cacheKey<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> <span class="token operator">...</span>payload <span class="token punctuation">}</span> <span class="token operator">=</span> action<span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="reload" tabindex="-1"><a class="header-anchor" href="#reload" aria-hidden="true">#</a> reload</h2><h3 id="\u751F\u6210-dom" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210-dom" aria-hidden="true">#</a> \u751F\u6210 DOM</h3><p>\u5728 App \u7C7B\u4E2D\u52A0\u5165\u65B9\u6CD5 render \uFF0C\u4F7F\u7528 store \u6570\u636E\u751F\u6210 DOM \u7ED3\u6784</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> filteredList<span class="token punctuation">,</span> leftCount <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> filterType<span class="token punctuation">,</span> todoList <span class="token punctuation">}</span> <span class="token operator">=</span> state<span class="token punctuation">;</span>

  <span class="token comment">// create</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;section class=&quot;todoapp&quot;&gt;
    &lt;header class=&quot;header&quot;&gt;
      &lt;h1&gt;todos&lt;/h1&gt;
      &lt;input class=&quot;new-todo&quot; placeholder=&quot;What needs to be done?&quot; autofocus /&gt;
    &lt;/header&gt;
    &lt;section class=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token operator">!</span>todoList<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;
      &lt;input id=&quot;toggle-all&quot; class=&quot;toggle-all&quot; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
        <span class="token operator">!</span>todoList<span class="token punctuation">.</span>length <span class="token operator">||</span> leftCount <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;checked&quot;</span>
      <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> type=&quot;checkbox&quot; /&gt;
      &lt;label for=&quot;toggle-all&quot;&gt;Mark all as complete&lt;/label&gt;
      &lt;ul class=&quot;todo-list&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filteredList<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token parameter">items<span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> text<span class="token punctuation">,</span> done <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            items <span class="token operator">+</span>
            <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;li data-id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; class=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">completed</span><span class="token operator">:</span> done <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;
          &lt;div class=&quot;view&quot;&gt;
            &lt;input class=&quot;toggle&quot; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>done <span class="token operator">?</span> <span class="token string">&quot;checked&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> type=&quot;checkbox&quot; /&gt;
            &lt;label&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/label&gt;
            &lt;button class=&quot;destroy&quot;&gt;&lt;/button&gt;
          &lt;/div&gt;
          &lt;input class=&quot;edit&quot; value=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; /&gt;
        &lt;/li&gt;</span><span class="token template-punctuation string">\`</span></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,
        &quot;&quot;
      )}&lt;/ul&gt;
      &lt;footer class=&quot;footer&quot;&gt;
        &lt;span class=&quot;todo-count&quot;&gt;&lt;strong&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>leftCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/strong&gt; items left&lt;/span&gt;
        &lt;ul class=&quot;filters&quot;&gt;
          &lt;li&gt;
            &lt;a href=&quot;#/&quot; class=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              <span class="token literal-property property">selected</span><span class="token operator">:</span> filterType <span class="token operator">===</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;All&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;#/active&quot; class=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              <span class="token literal-property property">selected</span><span class="token operator">:</span> filterType <span class="token operator">===</span> <span class="token string">&quot;active&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;Active&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;#/completed&quot; class=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              <span class="token literal-property property">selected</span><span class="token operator">:</span> filterType <span class="token operator">===</span> <span class="token string">&quot;completed&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;Completed&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
        &lt;button class=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token string-property property">&quot;clear-completed&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token literal-property property">hidden</span><span class="token operator">:</span> todoList<span class="token punctuation">.</span>length <span class="token operator">===</span> leftCount<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;Clear completed&lt;/button&gt;
      &lt;/footer&gt;
    &lt;/section&gt;
  &lt;/section&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><h3 id="\u76D1\u542C\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u76D1\u542C\u4E8B\u4EF6" aria-hidden="true">#</a> \u76D1\u542C\u4E8B\u4EF6</h3><p>\u5728 App \u7C7B\u4E2D\u65B0\u589E\u65B9\u6CD5 mount \uFF0C\u5C06 render \u65B9\u6CD5\u751F\u6210\u7684 dom \u5185\u5BB9\u8FDB\u884C\u4E8B\u4EF6\u59D4\u6258\uFF0C\u53EF\u4EE5\u8F7B\u677E\u76D1\u542C\u4E8B\u4EF6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bindEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.new-todo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">bindEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;keyup&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.new-todo&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onAdd<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;li .destroy&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onRemove<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;li .toggle&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onToggle<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;dblclick&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;li label&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onEdit<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;blur&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;li .edit&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onUpdate<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.toggle-all&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onToggleAll<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.clear-completed&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onClear<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.filters a&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function-variable function">onAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">&#39;Enter&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> text <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> input <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.new-todo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    input<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    input<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function-variable function">onRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parents</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;data-id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function-variable function">onToggle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parents</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;data-id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function-variable function">onEdit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parents</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> input <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> input<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  item<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&#39;editing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  input<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  input<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  input<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function-variable function">onUpdate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parents</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;data-id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  item<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">&#39;editing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function-variable function">onToggleAll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">toggleAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function-variable function">onClear</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">toggleAll</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function-variable function">onFilter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^#\\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div><h3 id="\u9875\u9762\u5237\u65B0" tabindex="-1"><a class="header-anchor" href="#\u9875\u9762\u5237\u65B0" aria-hidden="true">#</a> \u9875\u9762\u5237\u65B0</h3><p>\u5728 store.js \u4E2D\uFF0C\u6570\u636E\u4E00\u6709\u53D8\u52A8\uFF0C\u90FD\u4F1A\u8C03\u7528\u5BF9\u5E94 type \u7684 <code>dispatch</code> \u65B9\u6CD5\uFF0C\u5728\u8BE5\u65B9\u6CD5\u4E2D\u90FD\u4F1A\u6267\u884C <code>onChange</code> \u65B9\u6CD5\uFF0C\u800C\u6211\u4EEC\u5728 createStore \u4E2D\u4F20\u8FDB\u53BB\u7684 onChange \u53C2\u6570\u4E3A\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> <span class="token operator">...</span>payload <span class="token punctuation">}</span> <span class="token operator">=</span> action<span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD9\u91CC\u90FD\u9700\u8981\u8C03\u7528 <code>update</code> \u65B9\u6CD5\uFF0C\u8BA9\u6211\u4EEC\u5728 APP \u7C7B\u4E2D\u52A0\u5165\u8BE5\u65B9\u6CD5\u3002\u56E0\u4E3A\u6211\u4EEC\u628A todo \u6570\u636E\u5B58\u50A8\u5230\u4E86 localStorage\uFF0C\u6240\u4EE5\u6700\u7B80\u5355\u7684\u529E\u6CD5\u5C31\u7B97\u91CD\u65B0\u5237\u65B0\u9875\u9762\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u52A0\u5165-body" tabindex="-1"><a class="header-anchor" href="#\u52A0\u5165-body" aria-hidden="true">#</a> \u52A0\u5165 body</h3><p>\u6700\u57FA\u7840\u7684\u903B\u8F91\u5DF2\u7ECF\u5199\u597D\uFF0C\u8BA9\u6211\u4EEC\u628A\u5185\u5BB9\u52A0\u5165\u9875\u9762\uFF0C\u56E0\u4E3A\u6211\u4EEC\u76EE\u524D\u53EA\u5199\u4E86\u9875\u9762\u5185\u5BB9\u7684 APP \u7C7B\u3002 \u65B0\u5EFA index.js\uFF0C\u5728\u5176\u4E2D\u5199\u5165\u4E00\u4E0B\u5185\u5BB9\u3002\u5176\u5B9E\u5C31\u7B97\u5C06 APP mount \u51FA\u6765\u7684 dom \u5185\u5BB9\u52A0\u5165 body \u4E2D\uFF0C\u4E8B\u4EF6\u7ED1\u5B9A\u3001\u52A8\u4F5C\u76D1\u542C\u8FD9\u4E9B\u4E8B\u60C5\uFF0CAPP Class \u5DF2\u7ECF\u505A\u597D\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">&#39;jquery&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">component<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">$</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token keyword">new</span> <span class="token class-name">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">cacheKey</span><span class="token operator">:</span> <span class="token string">&#39;todo-app-reload&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  document<span class="token punctuation">.</span>body
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u7B80\u5355\u6765\u8BF4\uFF0C\u4F7F\u7528 reload \u65B9\u5F0F\u6765\u5199 Todo List\uFF0C\u5C31\u662F\u901A\u8FC7\u4E8B\u4EF6\u59D4\u6258\uFF0C\u6765\u76D1\u542C\u7528\u6237\u52A8\u4F5C\uFF0C\u5728\u6539\u53D8\u6570\u636E\uFF08state \u548C localStorage\uFF09\u540E\uFF0C\u91CD\u65B0\u5237\u65B0\u9875\u9762\u3002\u8FD9\u65F6\uFF0C Todo List \u4ECE localStorage \u4E2D\u53D6\u51FA\uFF0C\u53EF\u4EE5\u6B63\u786E\u6E32\u67D3\u9875\u9762\u3002</p><p>\u4F46\u662F\u6709\u5982\u4E0B\u7F3A\u70B9\uFF1A</p><ul><li>\u7528\u6237\u4E00\u6709\u52A8\u4F5C\u5C31\u5237\u65B0\u9875\u9762\uFF0C\u4F53\u9A8C\u5F88\u5DEE\u3002</li><li>\u65E0\u6CD5\u4FDD\u7559\u4E00\u4E9B\u72B6\u6001\uFF0C\u4F8B\u5982\u6587\u672C\u8F93\u5165\u6846\u7684\u5185\u5BB9\u3002</li><li>\u4E8B\u4EF6\u56DE\u8C03\u53EA\u80FD\u901A\u8FC7 data-XXX \u83B7\u53D6\u53C2\u6570\uFF08\u4F8B\u5982\uFF1A<code>id = Number(item.attr(&#39;data-id&#39;))</code> \uFF09\uFF0C\u5F88\u4E0D\u65B9\u4FBF\u3002</li></ul><h2 id="template" tabindex="-1"><a class="header-anchor" href="#template" aria-hidden="true">#</a> template</h2><p>\u6211\u4EEC\u9996\u5148\u6765\u89E3\u51B3\u7B2C\u4E00\u4E2A\u95EE\u9898\uFF0C\u5373\u4F7F\u7528\u66FF\u6362 dom \u5185\u5BB9\u7684\u65B9\u5F0F\uFF0C\u8FD9\u88AB\u79F0\u4E3A template \u65B9\u5F0F\u3002 \u53EA\u9700\u6539\u53D8 <code>update</code> \u65B9\u6CD5\uFF0C\u6539\u53D8\u5176\u9875\u9762\u66F4\u65B0\u65B9\u5F0F\u5373\u53EF\u3002\u91CD\u65B0\u6309\u7167\u66F4\u65B0\u540E\u7684 Todo \u6570\u636E\u751F\u6210\u4E00\u4EFD dom \uFF0C\u518D\u7ED1\u5B9A\u76D1\u542C\u4E8B\u4EF6\uFF0C\u5C06\u751F\u6210\u7684\u65B0 dom \u5185\u5BB9\u8FD4\u56DE\uFF0C\u5C06\u539F\u5185\u5BB9\u66FF\u6362\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">replaceWith</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>\u7591\u95EE\uFF0C\u4E3A\u4EC0\u4E48\u76F4\u63A5\u6267\u884C <code>this.mount()</code> \u4E0D\u751F\u6548\uFF0C\u6309\u9053\u7406\u4E5F\u7B97\u5BF9 <code>this.node</code> \u76F4\u63A5\u8D4B\u503C\u4E86\u5440\uFF1F</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bindEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;.new-todo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="dom" tabindex="-1"><a class="header-anchor" href="#dom" aria-hidden="true">#</a> dom</h2><p>\u4F7F\u7528 template \u65B9\u6CD5\u662F\u76F4\u63A5\u66FF\u6362\u5168\u90E8 dom \u8282\u70B9\uFF0C\u90A3\u6211\u4EEC\u60F3\u60F3\u53EF\u4E0D\u53EF\u4EE5\u57FA\u4E8E\u4F20\u8FC7\u6765\u7684 action \u53C2\u6570\uFF0C\u9010\u5404\u4E2A\u52A8\u4F5C\u7C7B\u522B\u4F5C\u51FA\u66FF\u6362/\u65B0\u589E/\u5220\u9664\u90E8\u5206 dom \u5185\u5BB9\u5462\uFF1F\u8FD9\u6837\u6027\u80FD\u6BD4\u8F83\u597D\uFF0C\u800C\u4E14\u53EF\u4EE5\u4FDD\u7559\u4E00\u4E9B\u72B6\u6001\uFF0C\u4F8B\u5982\u6587\u672C\u8F93\u5165\u6846\u7684\u5185\u5BB9\u3002 \u53EA\u9700\u8981\u6539\u53D8 <code>update</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> type<span class="token punctuation">,</span> <span class="token operator">...</span>payload <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> done<span class="token punctuation">,</span> text<span class="token punctuation">,</span> filterType <span class="token punctuation">}</span> <span class="token operator">=</span> payload<span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;add&#39;</span><span class="token operator">:</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.todo-list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;li data-id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; class=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">completed</span><span class="token operator">:</span> done <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;
        &lt;div class=&quot;view&quot;&gt;
          &lt;input class=&quot;toggle&quot; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>done <span class="token operator">?</span> <span class="token string">&#39;checked&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> type=&quot;checkbox&quot; /&gt;
          &lt;label&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/label&gt;
          &lt;button class=&quot;destroy&quot;&gt;&lt;/button&gt;
        &lt;/div&gt;
        &lt;input class=&quot;edit&quot; value=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; /&gt;
      &lt;/li&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.todo-count strong&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span>leftCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&#39;remove&#39;</span><span class="token operator">:</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.todo-list li[data-id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.todo-count strong&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span>leftCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&#39;update&#39;</span><span class="token operator">:</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.todo-list li[data-id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;] label</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.todo-list li[data-id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;] .edit</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&#39;toggle&#39;</span><span class="token operator">:</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.todo-list li[data-id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">&#39;completed&#39;</span><span class="token punctuation">,</span> done<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.todo-list li[data-id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;] .toggle</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&#39;checked&#39;</span><span class="token punctuation">,</span> done<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.todo-count strong&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span>leftCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.clear-completed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">&#39;hidden&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span>leftCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&#39;toggleAll&#39;</span><span class="token operator">:</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.todo-list li</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">&#39;completed&#39;</span><span class="token punctuation">,</span> done<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.todo-list li .toggle</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&#39;checked&#39;</span><span class="token punctuation">,</span> done<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.todo-count strong&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span>leftCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.clear-completed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">&#39;hidden&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>todoList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span>leftCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&#39;filter&#39;</span><span class="token operator">:</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.filters a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">$</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">&#39;selected&#39;</span><span class="token punctuation">,</span> filterType <span class="token operator">===</span> <span class="token function">$</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^#\\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>\u53EF\u662F\u6570\u636E\u4E0E UI \u540C\u6B65\u903B\u8F91\u592A\u590D\u6742\uFF0C\u5F88\u5BB9\u6613\u9057\u6F0F\u903B\u8F91\uFF0C\u4EE5\u81F3\u4E8E\u51FA\u73B0 bug\u3002\u5E76\u4E14\u540C\u6837\u6CA1\u6709\u89E3\u51B3\u4E8B\u4EF6\u56DE\u8C03\u53EA\u80FD\u901A\u8FC7 data-xxx \u83B7\u53D6\u53C2\u6570\u7684\u95EE\u9898\u3002</p><h2 id="dom-diff" tabindex="-1"><a class="header-anchor" href="#dom-diff" aria-hidden="true">#</a> dom-diff</h2><p>\u4E3A\u4E86\u907F\u514D\u76F4\u63A5\u64CD\u4F5C dom \u589E\u5220\u6539\u67E5\u8FDB\u884C\u6570\u636E UI \u540C\u6B65\u8FC7\u7A0B\u4E2D\u7684\u590D\u6742\u903B\u8F91\uFF0C\u6211\u4EEC\u53EF\u4EE5\u65B0\u751F\u6210\u4E00\u9897 dom \u6811\uFF0C\u7528\u65B0\u7684 node \u5185\u5BB9\u6765\u548C\u65E7 node \u8FDB\u884C\u6BD4\u8F83\uFF0C\u5728\u6BD4\u8F83\u8FC7\u7A0B\u4E2D\u53D1\u73B0\u6709\u66F4\u65B0\u5219\u66FF\u6362\uFF0C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">diff</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u65B0\u5EFA\u4E00\u4E2A diff.js\uFF0C\u4E13\u95E8\u7528\u6765\u653E\u7F6E diff \u64CD\u4F5C\u3002\u6CE8\u610F\uFF0C\u4E0D\u4EC5\u662F\u8282\u70B9\u7C7B\u522B\u8981\u6BD4\u8F83\uFF0C\u8282\u70B9\u5C5E\u6027\u4E5F\u8981\u6BD4\u8F83\u3002\u901A\u8FC7 data-key \u503C \u6765\u5224\u65AD\u662F\u5426\u662F\u540C\u4E00\u4E2A\u8282\u70B9\uFF0C\u6240\u4EE5\u9700\u8981\u5728 App Class \u7684 render \u51FD\u6570\u4E2D Todo \u8282\u70B9\u9879\u589E\u52A0\u6B64\u5C5E\u6027\u3002\u5BF9\u4E8E\u540C\u4E00\u4E2A data-key\uFF0C\u82E5\u5224\u65AD\u5176\u5185\u5BB9\u53C8\u53D8\uFF0C\u5219\u76F4\u63A5\u7528\u65B0\u8282\u70B9\u66FF\u6362\u65E7\u8282\u70B9\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">PROPS</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;className&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;htmlFor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">IGNORE_ATTRS</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;for&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">findChildIndexByKey</span><span class="token punctuation">(</span><span class="token parameter">children<span class="token punctuation">,</span> value<span class="token punctuation">,</span> ignore</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> children<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">child<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>ignore<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> child<span class="token punctuation">.</span>dataset<span class="token operator">?.</span>key <span class="token operator">===</span> value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">findChildIndexByType</span><span class="token punctuation">(</span><span class="token parameter">children<span class="token punctuation">,</span> value<span class="token punctuation">,</span> ignore</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> children<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">child<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>ignore<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> child<span class="token punctuation">.</span>nodeName <span class="token operator">===</span> value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">diffChildren</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> newNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> children <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>childNodes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> newChildren <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>childNodes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> newChildNodes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> updated <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  newChildren<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">newChild</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> newChild<span class="token punctuation">.</span>dataset<span class="token operator">?.</span>key<span class="token punctuation">;</span>
    <span class="token keyword">const</span> type <span class="token operator">=</span> newChild<span class="token punctuation">.</span>nodeName<span class="token punctuation">;</span>

    <span class="token keyword">const</span> index <span class="token operator">=</span>
      key <span class="token operator">!=</span> <span class="token keyword">null</span>
        <span class="token operator">?</span> <span class="token function">findChildIndexByKey</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> key<span class="token punctuation">,</span> updated<span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token function">findChildIndexByType</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> type<span class="token punctuation">,</span> updated<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> child <span class="token operator">=</span> children<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
      updated<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">diff</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> newChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
      newChildNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      newChildNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">child<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>updated<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">diff</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  newChildNodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">newChild<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> child <span class="token operator">=</span> node<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">!==</span> newChild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        node<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>newChild<span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>newChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// const max = Math.max(children.length, newChildren.length);</span>
  <span class="token comment">// for (let i = 0; i &lt; max; i++) {</span>
  <span class="token comment">//   diff(children[i], newChildren[i], node);</span>
  <span class="token comment">// }</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">diffProps</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> newNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> node<span class="token punctuation">.</span><span class="token function">getAttributeNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> newProps <span class="token operator">=</span> newNode<span class="token punctuation">.</span><span class="token function">getAttributeNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> allProps <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>props<span class="token punctuation">,</span> <span class="token operator">...</span>newProps<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  allProps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">IGNORE_ATTRS</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> hasProp <span class="token operator">=</span> node<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> newHasProp <span class="token operator">=</span> newNode<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> val <span class="token operator">=</span> node<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> newVal <span class="token operator">=</span> newNode<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasProp <span class="token operator">&amp;&amp;</span> newHasProp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">!==</span> newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        node<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>hasProp <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>newHasProp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasProp <span class="token operator">&amp;&amp;</span> newHasProp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token constant">PROPS</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">!==</span> newNode<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> newNode<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">diff</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> newNode<span class="token punctuation">,</span> parentNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">&amp;&amp;</span> newNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>nodeName <span class="token operator">===</span> newNode<span class="token punctuation">.</span>nodeName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>nodeName <span class="token operator">===</span> <span class="token string">&#39;#text&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>textContent <span class="token operator">!==</span> newNode<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          node<span class="token punctuation">.</span>textContent <span class="token operator">=</span> newNode<span class="token punctuation">.</span>textContent<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">diffProps</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">diffChildren</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">replaceChild</span><span class="token punctuation">(</span>newNode<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>newNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    node<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node <span class="token operator">&amp;&amp;</span> newNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    parentNode <span class="token operator">&amp;&amp;</span> parentNode<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br></div></div><h2 id="virtual-dom" tabindex="-1"><a class="header-anchor" href="#virtual-dom" aria-hidden="true">#</a> virtual dom</h2><p>\u91CD\u65B0\u6784\u9020\u4E00\u68F5 dom \u6811\u7684\u82B1\u9500\u8F83\u5927\uFF0C\u800C\u65B0\u5EFA\u4E00\u68F5 JS Object \u6811\u5219\u82B1\u9500\u8F83\u5C0F\u3002\u6211\u4EEC\u53EF\u4EE5\u6784\u9020\u65B0\u65E7\u4E24\u68F5 virtual dom\uFF0Cdiff \u7B97\u6CD5\u548C diff-dom \u4E00\u6837\uFF0C\u5728\u6BD4\u8F83\u8FC7\u7A0B\u4E2D\u8FDB\u884C\u66FF\u6362\u3001\u65B0\u589E\u6216\u5220\u9664\u7B49\u64CD\u4F5C\u3002</p><p>React \u4F7F\u7528\u7684 JSX \u5176\u5B9E\u4E5F\u662F\u7528 Object \u8868\u793A dom \u7ED3\u6784\u7684\u4E00\u79CD\u5199\u6CD5\uFF0C\u4E5F\u662F\u4E00\u79CD\u865A\u62DF dom \u7684\u8868\u793A\u3002\u6211\u4EEC\u4E5F\u53EF\u4EE5\u5728 render \u65B9\u6CD5\u91CC\u4F7F\u7528 JSX \u8868\u793A dom \u5185\u5BB9\uFF0C\u8FD9\u6837\u53EF\u4EE5\u76F4\u63A5\u5728 JSX \u91CC\u7ED1\u5B9A\u4E8B\u4EF6\uFF0C\u4E5F\u53EF\u4EE5\u76F4\u63A5\u4F20\u53C2\uFF0C\u800C\u65E0\u9700\u4F7F\u7528 data-xxx \u6765\u83B7\u53D6\u53C2\u6570\u3002\u8FD8\u53EF\u4EE5\u4F7F\u7528 autoFocus \u5C06\u8F93\u5165\u6846\u81EA\u52A8 focus\u3002\u5E76\u4E14\u53EF\u4EE5\u4E0D\u518D\u4F9D\u8D56 jQuery\u3002</p><p>\u4E3A\u4E86\u4F7F\u7528 JSX \uFF0C\u6211\u4EEC\u9700\u8981\u914D\u7F6E\u4E00\u4E0B babel\uFF0C\u4F7F\u7528 @babel/preset-react \u6765\u89E3\u6790 JSX\u3002</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>
      <span class="token string">&quot;@babel/preset-react&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;pragma&quot;</span><span class="token operator">:</span> <span class="token string">&quot;createElement&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;pragmaFrag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Fragment&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;@babel/preset-typescript&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u4F7F\u7528 JSX \u8BED\u6CD5\u66F4\u6539 render \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> filteredList<span class="token punctuation">,</span> leftCount <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> filterType<span class="token punctuation">,</span> todoList <span class="token punctuation">}</span> <span class="token operator">=</span> state<span class="token punctuation">;</span>

  <span class="token comment">// create</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>section className<span class="token operator">=</span><span class="token string">&quot;todoapp&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>header className<span class="token operator">=</span><span class="token string">&quot;header&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>todos<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>input
          className<span class="token operator">=</span><span class="token string">&quot;new-todo&quot;</span>
          placeholder<span class="token operator">=</span><span class="token string">&quot;What needs to be done?&quot;</span>
          autoFocus
          onKeyUp<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onAdd<span class="token punctuation">}</span>
        <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>header<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>section
        className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token operator">!</span>todoList<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>input
          id<span class="token operator">=</span><span class="token string">&quot;toggle-all&quot;</span>
          className<span class="token operator">=</span><span class="token string">&quot;toggle-all&quot;</span>
          checked<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span>todoList<span class="token punctuation">.</span>length <span class="token operator">||</span> leftCount<span class="token punctuation">)</span><span class="token punctuation">}</span>
          type<span class="token operator">=</span><span class="token string">&quot;checkbox&quot;</span>
          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onToggleAll<span class="token punctuation">}</span>
        <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>label htmlFor<span class="token operator">=</span><span class="token string">&quot;toggle-all&quot;</span><span class="token operator">&gt;</span>Mark all <span class="token keyword">as</span> complete<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>ul className<span class="token operator">=</span><span class="token string">&quot;todo-list&quot;</span><span class="token operator">&gt;</span>
          <span class="token punctuation">{</span>filteredList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> id<span class="token punctuation">,</span> text<span class="token punctuation">,</span> done <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span>
              <span class="token operator">&lt;</span>li data<span class="token operator">-</span>id<span class="token operator">=</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span> key<span class="token operator">=</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">completed</span><span class="token operator">:</span> done <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;view&quot;</span><span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>input className<span class="token operator">=</span><span class="token string">&quot;toggle&quot;</span> checked<span class="token operator">=</span><span class="token punctuation">{</span>done<span class="token punctuation">}</span> type<span class="token operator">=</span><span class="token string">&quot;checkbox&quot;</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onToggle</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>label onDoubleClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onEdit<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>button className<span class="token operator">=</span><span class="token string">&quot;destroy&quot;</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onRemove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>input className<span class="token operator">=</span><span class="token string">&quot;edit&quot;</span> value<span class="token operator">=</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span> onBlur<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onUpdate</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>footer className<span class="token operator">=</span><span class="token string">&quot;footer&quot;</span><span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>span className<span class="token operator">=</span><span class="token string">&quot;todo-count&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>strong<span class="token operator">&gt;</span><span class="token punctuation">{</span>leftCount<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>strong<span class="token operator">&gt;</span> items left
          <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>ul className<span class="token operator">=</span><span class="token string">&quot;filters&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;#/&quot;</span> className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">selected</span><span class="token operator">:</span> filterType <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onFilter</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
                All
              <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>a
                href<span class="token operator">=</span><span class="token string">&quot;#/active&quot;</span>
                className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">selected</span><span class="token operator">:</span> filterType <span class="token operator">===</span> <span class="token string">&#39;active&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onFilter</span><span class="token punctuation">(</span><span class="token string">&#39;active&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
              <span class="token operator">&gt;</span>
                Active
              <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>a
                href<span class="token operator">=</span><span class="token string">&quot;#/completed&quot;</span>
                className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">selected</span><span class="token operator">:</span> filterType <span class="token operator">===</span> <span class="token string">&#39;completed&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onFilter</span><span class="token punctuation">(</span><span class="token string">&#39;completed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
              <span class="token operator">&gt;</span>
                Completed
              <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>button
            className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              <span class="token string-property property">&#39;clear-completed&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
              <span class="token literal-property property">hidden</span><span class="token operator">:</span> todoList<span class="token punctuation">.</span>length <span class="token operator">===</span> leftCount<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onClear<span class="token punctuation">}</span>
          <span class="token operator">&gt;</span>
            Clear completed
          <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>footer<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br></div></div><p>\u4E0D\u518D\u4F7F\u7528 jQuery \u7684\u4E8B\u4EF6\u51FD\u6570\u5199\u6CD5\uFF0C\u56E0\u4E3A\u4E0D\u518D\u9700\u8981\u8D39\u52B2\u5730\u901A\u8FC7 data-xx \u6765\u83B7\u53D6\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">onAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">&#39;Enter&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> text <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token keyword">const</span> input <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    input<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    input<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function-variable function">onRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function-variable function">onToggle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function-variable function">onEdit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>
  <span class="token keyword">const</span> input <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> input<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  item<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;editing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  input<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  input<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  input<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function-variable function">onUpdate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>
  item<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;editing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>mount \u65B9\u6CD5\u4E5F\u9700\u4F5C\u51FA\u4E00\u4E9B\u6539\u53D8</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>vdom <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>node <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vdom<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD9\u662F\u4E00\u4E2A\u8F85\u52A9\u51FD\u6570\uFF0C\u6839\u636E\u865A\u62DF dom \u751F\u6210\u771F\u5B9E dom\uFF0C\u4E0B\u6587\u4E2D\u4F1A\u5728 diff.js \u4E2D\u5B9E\u73B0</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.new-todo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4E0B\u9762\u662F update \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> vdom <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">diff</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vdom<span class="token punctuation">,</span> vdom<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>vdom <span class="token operator">=</span> vdom<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u66F4\u65B0\u540E\u7684 diff.js\uFF0C// \u5185\u5BB9\u6709\u70B9\u591A\uFF0C\u7B49\u6709\u7A7A\u518D\u6765\u8BE6\u7EC6\u4ECB\u7ECD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">TEXT</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;VDOM_TEXT&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">PROPS</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;className&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;htmlFor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">EVENT_MAP</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">onDoubleClick</span><span class="token operator">:</span> <span class="token string">&#39;ondblclick&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">findChildIndexBy</span><span class="token punctuation">(</span><span class="token parameter">children<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> ignore</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> children<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">child<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>ignore<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> child<span class="token operator">?.</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> value
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">diffChildren</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> newNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> children <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> newChildren <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> newChildNodes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> updated <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  newChildren<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">newChild</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> newChild<span class="token operator">?.</span>key<span class="token punctuation">;</span>
    <span class="token keyword">const</span> type <span class="token operator">=</span> newChild<span class="token operator">?.</span>type<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> type <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token function">findChildIndexBy</span><span class="token punctuation">(</span>
        children<span class="token punctuation">,</span>
        key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">&#39;key&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;type&#39;</span><span class="token punctuation">,</span>
        key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> key <span class="token operator">:</span> type<span class="token punctuation">,</span>
        updated
      <span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> child <span class="token operator">=</span> children<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        updated<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">diff</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> newChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">mount</span><span class="token punctuation">(</span>newChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      newChildNodes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newChild<span class="token punctuation">.</span>domNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">child<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>updated<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">diff</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  newChildNodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">newChildNode<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> domNode <span class="token operator">=</span> node<span class="token punctuation">.</span>domNode<span class="token punctuation">;</span>
    <span class="token keyword">const</span> childNode <span class="token operator">=</span> domNode<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>childNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>childNode <span class="token operator">!==</span> newChildNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        domNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>newChildNode<span class="token punctuation">,</span> childNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      domNode<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>newChildNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// const max = Math.max(children.length, newChildren.length);</span>
  <span class="token comment">// for (let i = 0; i &lt; max; i++) {</span>
  <span class="token comment">//   diff(children[i], newChildren[i], node);</span>
  <span class="token comment">// }</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">diffProps</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> newNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>props <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> newProps <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>props <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> allProps <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>props<span class="token punctuation">,</span> <span class="token operator">...</span>newProps<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  allProps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> hasProp <span class="token operator">=</span> prop <span class="token keyword">in</span> node<span class="token punctuation">.</span>props<span class="token punctuation">;</span>
    <span class="token keyword">const</span> newHasProp <span class="token operator">=</span> prop <span class="token keyword">in</span> newNode<span class="token punctuation">.</span>props<span class="token punctuation">;</span>
    <span class="token keyword">const</span> val <span class="token operator">=</span> node<span class="token punctuation">.</span>props<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> newVal <span class="token operator">=</span> newNode<span class="token punctuation">.</span>props<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasProp <span class="token operator">&amp;&amp;</span> newHasProp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">!==</span> newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setProp</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>domNode<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>hasProp <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>newHasProp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setProp</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>domNode<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasProp <span class="token operator">&amp;&amp;</span> newHasProp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setProp</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>domNode<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">diff</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> newNode<span class="token punctuation">,</span> parentNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">&amp;&amp;</span> newNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type <span class="token operator">===</span> newNode<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token constant">TEXT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>text <span class="token operator">!==</span> newNode<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          node<span class="token punctuation">.</span>domNode<span class="token punctuation">.</span>textContent <span class="token operator">=</span> newNode<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">diffProps</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">diffChildren</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      newNode<span class="token punctuation">.</span>domNode <span class="token operator">=</span> node<span class="token punctuation">.</span>domNode<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>domNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">replaceChild</span><span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>domNode<span class="token punctuation">,</span> <span class="token function">mount</span><span class="token punctuation">(</span>newNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>newNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    node<span class="token punctuation">.</span>domNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>domNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node <span class="token operator">&amp;&amp;</span> newNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    parentNode <span class="token operator">&amp;&amp;</span> parentNode<span class="token punctuation">.</span>domNode<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token function">mount</span><span class="token punctuation">(</span>newNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> node<span class="token punctuation">.</span>domNode<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u77E5\u8BC6\u70B9\uFF1Areduce</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createElement</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> allProps<span class="token punctuation">,</span> <span class="token operator">...</span>allChildren</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> key<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span> <span class="token operator">=</span> allProps <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> props <span class="token punctuation">}</span><span class="token punctuation">;</span>

  element<span class="token punctuation">.</span>children <span class="token operator">=</span> allChildren<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> child</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    child <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span> <span class="token operator">?</span> child <span class="token operator">:</span> <span class="token punctuation">[</span>child<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> prev<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>
      child<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        c <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>c<span class="token punctuation">.</span>type
          <span class="token operator">?</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token constant">TEXT</span><span class="token punctuation">,</span>
              <span class="token literal-property property">text</span><span class="token operator">:</span> c<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
          <span class="token operator">:</span> c
      <span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">setProp</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> val<span class="token punctuation">,</span> remove</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^on[A-Z]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    node<span class="token punctuation">[</span><span class="token constant">EVENT_MAP</span><span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">||</span> prop<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">PROPS</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    node<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    node<span class="token punctuation">[</span>remove <span class="token operator">?</span> <span class="token string">&#39;removeAttribute&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;setAttribute&#39;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mount</span><span class="token punctuation">(</span><span class="token parameter">vdom<span class="token punctuation">,</span> parentNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> domNode<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>vdom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> text<span class="token punctuation">,</span> props<span class="token punctuation">,</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> vdom<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token constant">TEXT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      domNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      domNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
      props <span class="token operator">&amp;&amp;</span>
        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
          <span class="token function">setProp</span><span class="token punctuation">(</span>domNode<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> props<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">mount</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> domNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    vdom<span class="token punctuation">.</span>domNode <span class="token operator">=</span> domNode<span class="token punctuation">;</span>
    parentNode <span class="token operator">&amp;&amp;</span> parentNode<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>domNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> domNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br></div></div><h2 id="react" tabindex="-1"><a class="header-anchor" href="#react" aria-hidden="true">#</a> react</h2><p>\u5982\u4F55\u4F7F\u7528 react \u6765 Todo List \u5462\uFF1F\u5176\u5B9E\u5177\u4F53\u903B\u8F91\u548C vdom \u4E00\u6837\uFF0C\u4F18\u70B9\u4E5F\u662F\u4E00\u6837\uFF0C\u53EA\u662F react \u5E2E\u6211\u4EEC\u505A\u4E86\u4E00\u4E9B\u5C01\u88C5\uFF0C\u4EE3\u7801\u4F1A\u7B80\u77ED\u5F88\u591A\u3002\u6211\u4EEC\u4E0D\u518D\u9700\u8981\u81EA\u5DF1\u5199 diff\uFF0C\u53EA\u9700\u8981\u5199 App.js \u548C index.js \u5C31\u53EF\u4EE5\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> cx <span class="token keyword">from</span> <span class="token string">&#39;classnames&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> createStore <span class="token keyword">from</span> <span class="token string">&#39;@/common/store&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createElement<span class="token punctuation">,</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> PropTypes <span class="token keyword">from</span> <span class="token string">&#39;prop-types&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;@/common/base.css&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">cacheKey</span><span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>cacheKey<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> <span class="token operator">...</span>payload <span class="token punctuation">}</span> <span class="token operator">=</span> action<span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span>state<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function-variable function">onAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">&#39;Enter&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> text <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
      <span class="token keyword">const</span> input <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
      input<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
      input<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">onRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">onToggle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">onEdit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>
    <span class="token keyword">const</span> input <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> input<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    item<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;editing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    input<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    input<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    input<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">onUpdate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>
    item<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;editing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">onToggleAll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">toggleAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">onClear</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">toggleAll</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">onFilter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> filteredList<span class="token punctuation">,</span> leftCount <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> filterType<span class="token punctuation">,</span> todoList <span class="token punctuation">}</span> <span class="token operator">=</span> state<span class="token punctuation">;</span>

    <span class="token comment">// create</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>section className<span class="token operator">=</span><span class="token string">&#39;todoapp&#39;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>header className<span class="token operator">=</span><span class="token string">&#39;header&#39;</span><span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>todos<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>input
            className<span class="token operator">=</span><span class="token string">&#39;new-todo&#39;</span>
            placeholder<span class="token operator">=</span><span class="token string">&#39;What needs to be done?&#39;</span>
            autoFocus
            onKeyUp<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onAdd<span class="token punctuation">}</span>
          <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>header<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>section
          className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token operator">!</span>todoList<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
        <span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>input
            id<span class="token operator">=</span><span class="token string">&#39;toggle-all&#39;</span>
            className<span class="token operator">=</span><span class="token string">&#39;toggle-all&#39;</span>
            checked<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span>todoList<span class="token punctuation">.</span>length <span class="token operator">||</span> leftCount<span class="token punctuation">)</span><span class="token punctuation">}</span>
            type<span class="token operator">=</span><span class="token string">&#39;checkbox&#39;</span>
            onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onToggleAll<span class="token punctuation">}</span>
          <span class="token operator">/</span><span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>label htmlFor<span class="token operator">=</span><span class="token string">&#39;toggle-all&#39;</span><span class="token operator">&gt;</span>Mark all <span class="token keyword">as</span> complete<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>ul className<span class="token operator">=</span><span class="token string">&#39;todo-list&#39;</span><span class="token operator">&gt;</span>
            <span class="token punctuation">{</span>filteredList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> id<span class="token punctuation">,</span> text<span class="token punctuation">,</span> done <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token punctuation">(</span>
                <span class="token operator">&lt;</span>li data<span class="token operator">-</span>id<span class="token operator">=</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span> key<span class="token operator">=</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">completed</span><span class="token operator">:</span> done <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;view&#39;</span><span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>input
                      className<span class="token operator">=</span><span class="token string">&#39;toggle&#39;</span>
                      checked<span class="token operator">=</span><span class="token punctuation">{</span>done<span class="token punctuation">}</span>
                      type<span class="token operator">=</span><span class="token string">&#39;checkbox&#39;</span>
                      onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onToggle</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">}</span>
                    <span class="token operator">/</span><span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>label onDoubleClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onEdit<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>button
                      className<span class="token operator">=</span><span class="token string">&#39;destroy&#39;</span>
                      onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onRemove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">}</span>
                    <span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>input
                    className<span class="token operator">=</span><span class="token string">&#39;edit&#39;</span>
                    defaultValue<span class="token operator">=</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span>
                    onBlur<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onUpdate</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">}</span>
                  <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
              <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>footer className<span class="token operator">=</span><span class="token string">&#39;footer&#39;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>span className<span class="token operator">=</span><span class="token string">&#39;todo-count&#39;</span><span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>strong<span class="token operator">&gt;</span><span class="token punctuation">{</span>leftCount<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>strong<span class="token operator">&gt;</span> items left
            <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ul className<span class="token operator">=</span><span class="token string">&#39;filters&#39;</span><span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>a
                  href<span class="token operator">=</span><span class="token string">&#39;#/&#39;</span>
                  className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">selected</span><span class="token operator">:</span> filterType <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                  onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onFilter</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&gt;</span>
                  All
                <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>a
                  href<span class="token operator">=</span><span class="token string">&#39;#/active&#39;</span>
                  className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">selected</span><span class="token operator">:</span> filterType <span class="token operator">===</span> <span class="token string">&#39;active&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                  onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onFilter</span><span class="token punctuation">(</span><span class="token string">&#39;active&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&gt;</span>
                  Active
                <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>a
                  href<span class="token operator">=</span><span class="token string">&#39;#/completed&#39;</span>
                  className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">selected</span><span class="token operator">:</span> filterType <span class="token operator">===</span> <span class="token string">&#39;completed&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                  onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onFilter</span><span class="token punctuation">(</span><span class="token string">&#39;completed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&gt;</span>
                  Completed
                <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button
              className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token string-property property">&#39;clear-completed&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                <span class="token literal-property property">hidden</span><span class="token operator">:</span> todoList<span class="token punctuation">.</span>length <span class="token operator">===</span> leftCount<span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
              onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onClear<span class="token punctuation">}</span>
            <span class="token operator">&gt;</span>
              Clear completed
            <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>footer<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br></div></div><p>index.js \u4FEE\u6539</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createElement <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App cacheKey<span class="token operator">=</span><span class="token string">&#39;todo-app-react&#39;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3" aria-hidden="true">#</a> \u5C0F\u7ED3</h2><ul><li><p>reload</p><ul><li>\u66B4\u529B\u5237\u65B0\u9875\u9762\uFF0C\u4F53\u9A8C\u6781\u5DEE</li><li>\u8F93\u5165\u6846\u72B6\u6001\u65E0\u6CD5\u4FDD\u7559</li><li>\u4F7F\u7528 jQuery</li><li>\u901A\u8FC7\u4E8B\u4EF6\u59D4\u6258\u76D1\u542C\u4E8B\u4EF6</li><li>\u4E8B\u4EF6\u56DE\u8C03\u4F7F\u7528 data-xx \u83B7\u53D6\u6570\u636E</li></ul></li><li><p>template</p><ul><li>\u89E3\u51B3\u4E86 reload \u66B4\u529B\u5237\u65B0\u9875\u9762\u7684\u7F3A\u70B9</li><li>\u5168\u90E8\u7F6E\u6362 node \u5185\u5BB9\uFF0C\u82B1\u9500\u5927</li><li>\u8F93\u5165\u6846\u72B6\u6001\u65E0\u6CD5\u4FDD\u7559</li><li>\u4F7F\u7528 jQuery</li><li>\u901A\u8FC7\u4E8B\u4EF6\u59D4\u6258\u76D1\u542C\u4E8B\u4EF6</li><li>\u4E8B\u4EF6\u56DE\u8C03\u4F7F\u7528 data-xx \u83B7\u53D6\u6570\u636E</li></ul></li><li><p>dom</p><ul><li>\u89E3\u51B3\u4E86 template \u5168\u90E8\u7F6E\u6362 node \u7684\u7F3A\u70B9</li><li>\u76F4\u63A5\u64CD\u4F5C dom\uFF0C\u6027\u80FD\u597D</li><li>\u8F93\u5165\u6846\u72B6\u6001\u53EF\u4EE5\u4FDD\u7559</li><li>\u6570\u636E\u4E0E UI \u540C\u6B65\u903B\u8F91\u592A\u590D\u6742\uFF0C\u5F88\u5BB9\u6613\u9057\u6F0F\u903B\u8F91</li><li>\u4F7F\u7528 jQuery</li><li>\u901A\u8FC7\u4E8B\u4EF6\u59D4\u6258\u76D1\u542C\u4E8B\u4EF6</li><li>\u4E8B\u4EF6\u56DE\u8C03\u4F7F\u7528 data-xx \u83B7\u53D6\u6570\u636E</li></ul></li><li><p>dom-diff</p><ul><li>\u6570\u636E\u4E0E\u6A21\u677F\u7ED1\u5B9A\uFF0C\u6570\u636E\u66F4\u65B0\u5219\u540C\u6B65\u5230 UI\uFF0C\u65E0\u9700\u8FC7\u591A dom \u64CD\u4F5C</li><li>\u8F93\u5165\u6846\u72B6\u6001\u53EF\u4EE5\u4FDD\u7559</li><li>\u901A\u8FC7\u751F\u6210\u4E00\u4E2A\u65B0\u7684 node \u7247\u6BB5\uFF0C\u5185\u5BB9\u591A\u7684\u65F6\u5019\u6027\u80FD\u5DEE</li><li>\u4F7F\u7528 jQuery</li><li>\u901A\u8FC7\u4E8B\u4EF6\u59D4\u6258\u76D1\u542C\u4E8B\u4EF6</li><li>\u4E8B\u4EF6\u56DE\u8C03\u53EA\u80FD\u901A\u8FC7 data-xxx \u83B7\u53D6\u53C2\u6570</li></ul></li><li><p>vdom</p><ul><li>\u751F\u6210 JS Object \u6811\u7684\u5F00\u9500\u8F83\u5C0F</li><li>\u4E0D\u4F9D\u8D56 jQuery</li><li>\u8F93\u5165\u6846\u72B6\u6001\u53EF\u4EE5\u4FDD\u7559</li><li>\u53EF\u4EE5\u76F4\u63A5\u5728 JSX \u91CC\u7ED1\u5B9A\u4E8B\u4EF6</li><li>\u76F4\u63A5\u5728 JSX \u91CC\u4F20\u53C2</li></ul></li><li><p>react</p><ul><li>\u548C vdom \u5DEE\u4E0D\u591A</li></ul></li></ul><h2 id="question" tabindex="-1"><a class="header-anchor" href="#question" aria-hidden="true">#</a> question</h2><ul><li><p>\u539F\u751F dom \u64CD\u4F5C \u4E0E virtual dom \u7684\u6BD4\u8F83</p><ul><li><p>\u6027\u80FD\u4E0E\u53EF\u7EF4\u62A4\u6027\u7684\u53D6\u820D\uFF1Avdom \u53EF\u4EE5\u4E13\u6CE8\u4E8E\u6570\u636E\uFF0C\u4E0D\u53BB\u624B\u52A8 dom \u64CD\u4F5C\u53EF\u4EE5\u5927\u5927\u63D0\u9AD8\u5F00\u53D1\u6548\u7387</p></li><li><p>dom \u64CD\u4F5C\u76F8\u5BF9\u8F83 js \u6162\uFF0C\u800C\u4E14\u4F1A\u9020\u6210\u6D4F\u89C8\u5668\u7684\u56DE\u6D41\u548C\u91CD\u7ED8;</p></li><li><p>\u91CD\u7ED8\u6027\u80FD\u6D88\u8017\uFF0C\u4E3A\u4EC0\u4E48 \u6700\u540E\u8FD8\u662F\u9009\u62E9 vdom\uFF0C\u56E0\u4E3A\u53EF\u4EE5\u8DE8\u5E73\u53F0</p><ul><li>innerHTML: render html string O(template size) + \u91CD\u65B0\u521B\u5EFA\u6240\u6709 DOM \u5143\u7D20 O(DOM size</li><li>vdom: render Virtual DOM + diff O(template size) + \u5FC5\u8981\u7684 DOM \u66F4\u65B0 O(DOM change)</li><li>dom: \u5FC5\u8981\u7684 DOM \u66F4\u65B0 O(DOM change)</li></ul></li></ul></li><li><p>\u4E3A\u4EC0\u4E48\u4F1A\u51FA\u73B0 react / vue\uFF0C\u6BD5\u7ADF jquery \u4E5F\u5F88\u4F18\u79C0</p></li></ul><p>\u4E13\u6CE8\u6570\u636E\uFF0C\u800C\u4E0D\u662F\u52A8\u4F5C\uFF08\u5BB9\u6613\u51FA\u9519\uFF0C\u800C\u4E14\u9700\u8981\u81EA\u5DF1\u6536\u62FE\u9996\u5C3E\uFF09\u3002 \u9700\u6C42\u8FED\u4EE3\u3001bug \u4FEE\u590D\u3001\u590D\u7528</p>`,80),C=s("vue \u7684\u53CC\u5411\u7ED1\u5B9A "),T=n("li",null,[s("Vue 2.0 \u4F7F\u7528 Object.defineProperty()\u5B9E\u73B0\u6570\u636E\u54CD\u5E94 Object.defineProperty() \u65B9\u6CD5\u4F1A\u76F4\u63A5\u5728\u4E00\u4E2A\u5BF9\u8C61\u4E0A\u5B9A\u4E49\u4E00\u4E2A\u65B0\u5C5E\u6027\uFF0C\u6216\u8005\u4FEE\u6539\u4E00\u4E2A\u5BF9\u8C61\u7684\u73B0\u6709\u5C5E\u6027\uFF0C\u5E76\u8FD4\u56DE\u6B64\u5BF9\u8C61\u3002 \u9012\u5F52\u904D\u5386 data \u4E2D\u7684\u6570\u636E\uFF0C\u4F7F\u7528 Object.defineProperty()\u52AB\u6301 getter \u548C setter\uFF0C\u5728 getter \u4E2D\u505A\u6570\u636E\u4F9D\u8D56\u6536\u96C6\u5904\u7406\uFF0C\u5728 setter \u4E2D \u76D1\u542C\u6570\u636E\u7684\u53D8\u5316\uFF0C\u5E76\u901A\u77E5\u8BA2\u9605\u5F53\u524D\u6570\u636E\u7684\u5730\u65B9\u3002 \u95EE\u9898\uFF1A "),n("ul",null,[n("li",null,"\u68C0\u6D4B\u4E0D\u5230\u5BF9\u8C61\u5C5E\u6027\u7684\u6DFB\u52A0\u548C\u5220\u9664"),n("li",null,"\u65E0\u6CD5\u76D1\u63A7\u5230\u6570\u7EC4\u4E0B\u6807\u7684\u53D8\u5316\uFF0C\u5BFC\u81F4\u76F4\u63A5\u901A\u8FC7\u6570\u7EC4\u7684\u4E0B\u6807\u7ED9\u6570\u7EC4\u8BBE\u7F6E\u503C\uFF0C\u4E0D\u80FD\u5B9E\u65F6\u54CD\u5E94\u3002"),n("li",null,"\u5F53 data \u4E2D\u6570\u636E\u6BD4\u8F83\u591A\u4E14\u5C42\u7EA7\u5F88\u6DF1\u7684\u65F6\u5019\uFF0C\u4F1A\u6709\u6027\u80FD\u95EE\u9898\uFF0C\u56E0\u4E3A\u8981\u904D\u5386 data \u4E2D\u6240\u6709\u7684\u6570\u636E\u5E76\u7ED9\u5176\u8BBE\u7F6E\u6210\u54CD\u5E94\u5F0F\u7684\u3002")])],-1),j=s('Vue 3.0 \u4E2D\u7684 Proxy Proxy \u662F\u62E6\u622A\u5BF9\u8C61\uFF0C\u5BF9\u5BF9\u8C61\u8FDB\u884C\u4E00\u4E2A"\u62E6\u622A"\uFF0C\u5916\u754C\u5BF9\u8BE5\u5BF9\u8C61\u7684\u8BBF\u95EE\uFF0C\u90FD\u5FC5\u987B\u5148\u901A\u8FC7\u8FD9\u5C42\u62E6\u622A\u3002\u65E0\u8BBA\u8BBF\u95EE\u5BF9\u8C61\u7684\u4EC0\u4E48\u5C5E\u6027\uFF0C\u4E4B\u524D\u5B9A\u4E49\u7684\u8FD8\u662F\u65B0\u589E\u7684\uFF0C\u5B83\u90FD\u4F1A\u8D70\u5230\u62E6\u622A\u4E2D\uFF0C \u53C2\u8003\uFF1A'),S={href:"https://juejin.cn/post/6844904088119853063",target:"_blank",rel:"noopener noreferrer"},L=s("\u7B80\u5355\u901A\u4FD7\u7684\u7406\u89E3 Vue3.0 \u4E2D\u7684 Proxy"),A=s(" proxy \u4FEE\u6539\u7684\u662F\u7A0B\u5E8F\u9ED8\u8BA4\u884C\u4E3A\uFF0C\u5C31\u5F62\u540C\u4E8E\u5728\u7F16\u7A0B\u8BED\u8A00\u5C42\u9762\u4E0A\u505A\u4FEE\u6539\uFF0C\u5C5E\u4E8E\u5143\u7F16\u7A0B(meta programming) "),_={href:"https://vue3js.cn/es6/#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%94%A8proxy%E9%87%8D%E6%9E%84",target:"_blank",rel:"noopener noreferrer"},P=s("\u4E3A\u4EC0\u4E48\u8981\u7528 proxy \u91CD\u6784");function E($,O){const a=o("ExternalLinkIcon");return e(),c(l,null,[r,k,b,d,m,n("p",null,[g,n("a",f,[y,p(a)]),h]),n("blockquote",null,[n("p",null,[w,n("a",v,[x,p(a)]),q])]),N,n("ul",null,[n("li",null,[C,n("ul",null,[T,n("li",null,[j,n("a",S,[L,p(a)]),A,n("a",_,[P,p(a)])])])])])],64)}var V=t(i,[["render",E],["__file","index.html.vue"]]);export{V as default};
