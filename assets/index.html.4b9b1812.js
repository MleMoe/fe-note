import{_ as p,r as l,o as i,c as r,a as s,b as e,F as c,d as t,e as n}from"./app.d1630e5f.js";import{_ as o,a as u}from"./optimization.1dbe5af1.js";var b="/images/wasm/wasm.webp",m="/images/wasm/js-time.webp",d="/images/wasm/jit-time.webp",h="/images/wasm/wasm-time.webp";const k={},_=t('<h1 id="webassembly" tabindex="-1"><a class="header-anchor" href="#webassembly" aria-hidden="true">#</a> WebAssembly</h1><h2 id="wasm-\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#wasm-\u662F\u4EC0\u4E48" aria-hidden="true">#</a> Wasm \u662F\u4EC0\u4E48</h2><p>WebAssembly\uFF0C\u7F29\u5199\u4E3A WASM\uFF0C\u5176\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><p>webassembly.org</p><blockquote><p>WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.</p></blockquote><p>MDN</p><blockquote><p>WebAssembly \u662F\u4E00\u79CD\u8FD0\u884C\u5728\u73B0\u4EE3\u7F51\u7EDC\u6D4F\u89C8\u5668\u4E2D\u7684\u65B0\u578B\u4EE3\u7801\uFF0C\u5E76\u4E14\u63D0\u4F9B\u65B0\u7684\u6027\u80FD\u7279\u6027\u548C\u6548\u679C\u3002\u5B83\u8BBE\u8BA1\u7684\u76EE\u7684\u4E0D\u662F\u4E3A\u4E86\u624B\u5199\u4EE3\u7801\uFF0C\u800C\u662F\u4E3A\u8BF8\u5982 C\u3001C++\u548C Rust \u7B49\u4F4E\u7EA7\u6E90\u8BED\u8A00\u63D0\u4F9B\u4E00\u4E2A\u9AD8\u6548\u7684\u7F16\u8BD1\u76EE\u6807\u3002 \u5BF9\u4E8E\u7F51\u7EDC\u5E73\u53F0\u800C\u8A00\uFF0C\u8FD9\u5177\u6709\u5DE8\u5927\u7684\u610F\u4E49\u2014\u2014\u8FD9\u4E3A\u5BA2\u6237\u7AEF app \u63D0\u4F9B\u4E86\u4E00\u79CD\u5728\u7F51\u7EDC\u5E73\u53F0\u4EE5\u63A5\u8FD1\u672C\u5730\u901F\u5EA6\u7684\u65B9\u5F0F\u8FD0\u884C\u591A\u79CD\u8BED\u8A00\u7F16\u5199\u7684\u4EE3\u7801\u7684\u65B9\u5F0F\uFF1B\u5728\u8FD9\u4E4B\u524D\uFF0C\u5BA2\u6237\u7AEF app \u662F\u4E0D\u53EF\u80FD\u505A\u5230\u7684\u3002</p></blockquote><p>\u603B\u7684\u6765\u8BF4\uFF0CWASM \u662F\u4E00\u79CD\u4E2D\u95F4\u683C\u5F0F\uFF0C\u662F\u4E00\u79CD\u5B57\u8282\u7801\uFF0C\u4E00\u4E2A\u7F16\u8BD1\u76EE\u6807</p><p><img src="'+b+'" alt="\u683C\u5F0F"></p><h2 id="\u4E3A\u4EC0\u4E48\u6709-wasm" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u6709-wasm" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u6709 Wasm</h2><p>\u4E3A\u4E86\u6548\u7387</p><p>1995 \u5E74\uFF0CJavascript \u8BED\u8A00\u521B\u5EFA\uFF0C\u901F\u5EA6\u975E\u5E38\u7F13\u6162\u3002 <img src="'+m+'" alt="js-time"></p><p>2008 \u5E74\uFF0C\u8C37\u6B4C Chrome \u51FA\u73B0\uFF0C\u5E26\u6765 V8 \u5F15\u64CE\u548C JIT \u5373\u65F6\u7F16\u8BD1\u3002 \u6709\u4E86 JIT\uFF0CJavaScript \u82B1\u5728\u5404\u4EFB\u52A1\u4E0A\u7684\u76F8\u5BF9\u65F6\u957F\u53D8\u6210\u4E86\u8FD9\u6837\u3002 <img src="'+d+'" alt="js-time"></p><p>2015 \u5E74\uFF0CWebAssembly \u53D1\u5E03\u3002\u76F8\u6BD4\u4E4B\u4E0B\uFF0CWebAssembly \u7684\u6267\u884C\u8FC7\u7A0B\u662F\u8FD9\u6837\u7684\u3002 <img src="'+h+'" alt="js-time"></p><p>\u8BE6\u7EC6\u6765\u8BB2\uFF0CJS \u5728 v8 \u5F15\u64CE\u4E2D\u7684\u6267\u884C\u8FC7\u7A0B\u3002 <img src="'+o+'" alt="v8-js"></p><p>JavaScript \u6587\u4EF6\u5728\u6D4F\u89C8\u5668\u4E2D\u88AB\u4E0B\u8F7D\u4E0B\u6765\u540E\uFF0C\u5728 V8 \u5F15\u64CE\u4E2D\u7ECF\u5386\u4E86\u4EC0\u4E48\u5462\uFF1F\u7B80\u5355\u6765\u8BF4 V8 \u5F15\u64CE\u901A\u5E38\u4F1A\u7ECF\u8FC7\u4E00\u4E0B\u6D41\u7A0B\uFF1A\u6E90\u7801 --&gt; AST --&gt; \u5B57\u8282\u7801 --&gt; \u4E8C\u8FDB\u5236\u4EE3\u7801</p><ul><li>\u89E3\u6790\u5668 Parser \u628A JS \u4EE3\u7801\u8F6C\u5316\u6210\u62BD\u8C61\u8BED\u6CD5\u6811 AST</li><li>\u89E3\u91CA\u5668 Ignition \u5C06 AST \u8F6C\u5316\u6210\u5B57\u8282\u7801 ByteCode</li><li>\u6267\u884C ByteCode \u53CA\u4F18\u5316 \u5728\u89E3\u91CA\u6267\u884C\u5B57\u8282\u7801\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u6807\u8BB0\u91CD\u590D\u6267\u884C\u7684\u70ED\u70B9\u4EE3\u7801\uFF0C\u7136\u540E\u628A\u8BE5\u4EE3\u7801\u53D1\u9001\u7ED9\u7F16\u8BD1\u5668 TurboFan\uFF0C\u7F16\u8BD1\u4E3A\u66F4\u9AD8\u6548\u7684\u673A\u5668\u7801\u50A8\u5B58\u8D77\u6765\uFF0C\u7B49\u5230\u4E0B\u6B21\u518D\u6267\u884C\u5230\u8FD9\u6BB5\u4EE3\u7801\u65F6\uFF0C\u5C31\u4F1A\u7528\u73B0\u5728\u7684\u673A\u5668\u7801\u66FF\u6362\u539F\u6765\u7684\u5B57\u8282\u7801\u8FDB\u884C\u6267\u884C\uFF0C\u8FD9\u6837\u5927\u5927\u63D0\u5347\u4E86\u4EE3\u7801\u7684\u6267\u884C\u6548\u7387\u3002\u53E6\u5916\uFF0C\u5F53 TurboFan \u5224\u65AD\u4E00\u6BB5\u4EE3\u7801\u4E0D\u518D\u4E3A\u70ED\u70B9\u4EE3\u7801\u7684\u65F6\u5019\uFF0C\u4F1A\u6267\u884C\u53BB\u4F18\u5316\u7684\u8FC7\u7A0B\uFF0C\u628A\u4F18\u5316\u7684\u673A\u5668\u7801\u4E22\u6389\uFF0C\u7136\u540E\u6267\u884C\u8FC7\u7A0B\u56DE\u5230 Ignition\u3002</li></ul><p><img src="'+u+'" alt="optimization"></p><p>\u4F46\u662F\u7531\u4E8E JavaScript \u662F\u4E00\u79CD\u52A8\u6001\u7C7B\u578B\u8BED\u8A00\uFF0C\u53D8\u91CF\u4E0A\u4E00\u79D2\u53EF\u80FD\u662F Array\uFF0C\u4E0B\u4E00\u79D2\u5C31\u53D8\u6210\u4E86 Number\u3002\u90A3\u4E48\u4E0A\u4E00\u6B21\u5F15\u64CE\u6240\u505A\u7684\u4F18\u5316\uFF0C\u5C31\u5931\u53BB\u4E86\u4F5C\u7528\uFF0C\u6B64\u65F6\u53C8\u8981\u518D\u4E00\u6B21\u8FDB\u884C\u4F18\u5316\u3002</p><p>\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5E26\u6709\u7C7B\u578B\u7684 TypeScript \u51FA\u73B0\u4E86\u3002 \u53EF\u662F TS \u5BF9\u7C7B\u578B\u7684\u95EE\u9898\u505A\u7684\u518D\u597D\uFF0C\u4E5F\u59CB\u7EC8\u9003\u4E0D\u8FC7\u8981\u7ECF\u8FC7 Parser \u548C Ignition\uFF0C\u8FD9\u4E24\u6B65\u662F JavaScript \u4EE3\u7801\u5728\u5F15\u64CE\u6267\u884C\u8FC7\u7A0B\u5F53\u4E2D\u6D88\u8017\u65F6\u95F4\u6700\u591A\u7684\u4E24\u6B65\u3002\u800C Wasm \u4E0D\u7528\u7ECF\u8FC7\u8FD9\u4E24\u6B65\uFF0C\u8FD9\u5C31\u662F\u4E3A\u4EC0\u4E48 Wasm \u6BD4 TS \u5FEB + \u4E3A\u4EC0\u4E48\u8FD8\u4F1A\u6709 Wasm \u7684\u539F\u56E0\u3002</p><h2 id="wasm-\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#wasm-\u7684\u4F7F\u7528" aria-hidden="true">#</a> WASM \u7684\u4F7F\u7528</h2><p>Compile a WebAssembly module from\u2026</p><ul><li>C/C++</li><li>Rust</li><li>AssemblyScript (a TypeScript-like syntax)</li><li>C#</li><li>F#</li><li>Go</li><li>Kotlin</li><li>Swift</li><li>D</li><li>Pascal</li><li>Zig</li></ul><h3 id="\u4EE5-c-c-\u4E3A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u4EE5-c-c-\u4E3A\u4F8B" aria-hidden="true">#</a> \u4EE5 C/C++\u4E3A\u4F8B</h3><h4 id="\u51C6\u5907\u5DE5\u5177" tabindex="-1"><a class="header-anchor" href="#\u51C6\u5907\u5DE5\u5177" aria-hidden="true">#</a> \u51C6\u5907\u5DE5\u5177</h4>',25),g=s("p",null,"cmake",-1),f=n("\u65B9\u6CD5 1: "),w={href:"https://cmake.org/",target:"_blank",rel:"noopener noreferrer"},v=n("\u5B98\u7F51"),y=n("\u4E0B\u8F7D"),E=s("li",null,"\u65B9\u6CD5 2: mac brew",-1),A=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>brew <span class="token function">install</span> cmake
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>Emscripten</li></ul><p>Emscripten \u662F\u4F7F\u7528 LLVM \u6784\u5EFA\u7684\u5DE5\u5177\u94FE\uFF0C\u53EF\u5C06\u6E90\u4EE3\u7801\u7F16\u8BD1\u4E3A WebAssembly\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/juj/emsdk.git
<span class="token builtin class-name">cd</span> emsdk
./emsdk <span class="token function">install</span> latest
./emsdk activate latest

<span class="token comment"># \u73AF\u5883\u53D8\u91CF\u914D\u7F6E\uFF08\u7EC8\u7AEF\u4F1A\u63D0\u793A\uFF09</span>
<span class="token comment"># on Linux or Mac OS X\uFF0C\u5728\u5F53\u524D\u7EC8\u7AEF\u7A97\u53E3\u77ED\u6682\u914D\u7F6E PATH \u7B49\u53D8\u91CF</span>
<span class="token builtin class-name">source</span> ./emsdk_env.sh
<span class="token comment"># \u6C38\u4E45\u914D\u7F6E\u5219\u5C06\u73AF\u5883\u53D8\u91CF\u6DFB\u52A0\u81F3 .bashrc \u6216 .zshrc</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;source &quot;\u7565/emsdk/emsdk_env.sh&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> <span class="token environment constant">$HOME</span>/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="\u51C6\u5907-c-\u6E90\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u51C6\u5907-c-\u6E90\u6587\u4EF6" aria-hidden="true">#</a> \u51C6\u5907 C \u6E90\u6587\u4EF6</h4><p><code>EMSCRIPTEN_KEEPALIVE</code> \u8868\u793A\u8FD9\u4E2A\u51FD\u6570\u9700\u8981\u5BFC\u51FA</p><div class="language-C ext-C line-numbers-mode"><pre class="language-C"><code>#include &lt;emscripten/emscripten.h&gt;

#ifdef __cplusplus
extern &quot;C&quot;
{
#endif

int EMSCRIPTEN_KEEPALIVE add(int num) {
  int s = 0;
  for (int i = 1; i &lt;= num; i++) {
      s = s+1;
  }
  return s;
}

#ifdef __cplusplus
}
#endif

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="build" tabindex="-1"><a class="header-anchor" href="#build" aria-hidden="true">#</a> build</h4><p>CMakeLists.txt</p><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code>cmake_minimum_required(VERSION 2.8)
project(WASM)

set( CMAKE_CXX_STANDARD 11 )

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif(NOT CMAKE_BUILD_TYPE)

MESSAGE(&quot;Build type: &quot; \${CMAKE_BUILD_TYPE})

# \u8BBE\u7F6E EMSCRIPTEN \u7F16\u8BD1\u9009\u9879\uFF0C\u7ED1\u5B9A&#39;ccall&#39;,&#39;cwrap&#39;
set(EMSCRIPTEN_LINK_FLAGS &quot;\${EMSCRIPTEN_LINK_FLAGS} -s EXTRA_EXPORTED_RUNTIME_METHODS=[&#39;ccall&#39;,&#39;cwrap&#39;]&quot;)

add_executable(add src/add.cc)
set_target_properties( add PROPERTIES LINK_FLAGS &quot;\${EMSCRIPTEN_LINK_FLAGS} --bind&quot; )

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u7F16\u8BD1\u811A\u672C</p><p>emcmake \u548C emmake \u662F Emscripten \u7684\u7F16\u8BD1\u5DE5\u5177\uFF0C\u7C7B\u4F3C\u4E8E cmake \u548C make</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token string">&quot;build&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token function">mkdir</span> build
<span class="token keyword">fi</span>
<span class="token builtin class-name">cd</span> build
emcmake cmake <span class="token punctuation">..</span>
emmake <span class="token function">make</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD0\u884C \u5373\u53EF\u7F16\u8BD1\u51FA wasm \u6587\u4EF6\u4E86\u3002</p><h4 id="\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528" aria-hidden="true">#</a> \u4F7F\u7528</h4><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>assemblyCpp/build/add.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token number">1000000000</span><span class="token punctuation">;</span>
  Module<span class="token punctuation">.</span><span class="token function-variable function">onRuntimeInitialized</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> resultEM <span class="token operator">=</span> Module<span class="token punctuation">.</span><span class="token function">_add</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// const result = Module.ccall(&#39;add&#39;, &#39;number&#39;, [&#39;number&#39;], [num]);</span>
    <span class="token keyword">const</span> end <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;em \u7528\u65F6\uFF1A&#39;</span><span class="token punctuation">,</span> end <span class="token operator">-</span> start<span class="token punctuation">,</span> <span class="token string">&#39;ms&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;em \u7ED3\u679C\uFF1A&#39;</span><span class="token punctuation">,</span> resultEM<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="\u6548\u7387\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#\u6548\u7387\u6BD4\u8F83" aria-hidden="true">#</a> \u6548\u7387\u6BD4\u8F83</h4><p>\u8FD0\u884C\u6548\u7387\u6BD4\u8F83(1,000,000,000 \u6B21\u8BA1\u7B97)</p><ul><li>js: 1020 ms</li><li>ts: 975 ms</li><li>emscripten(c/c++): 1 ms</li></ul><h4 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h4>`,20),S={href:"https://github.com/MleMoe/wasm-start",target:"_blank",rel:"noopener noreferrer"},x=n("github repo: wasm-start"),C=t('<h2 id="\u5176\u5B83" tabindex="-1"><a class="header-anchor" href="#\u5176\u5B83" aria-hidden="true">#</a> \u5176\u5B83</h2><h2 id="web-\u6807\u51C6" tabindex="-1"><a class="header-anchor" href="#web-\u6807\u51C6" aria-hidden="true">#</a> Web \u6807\u51C6</h2><p>\u5728 2019 \u5E74\uFF0CW3C \u4F7F WebAssembly \u6210\u4E3A\u4E86\u65B0\u7684 Web \u6807\u51C6\u3002</p><h3 id="assemblyscript" tabindex="-1"><a class="header-anchor" href="#assemblyscript" aria-hidden="true">#</a> assemblyScript</h3><p>ts -&gt; wasm</p><h3 id="wasi" tabindex="-1"><a class="header-anchor" href="#wasi" aria-hidden="true">#</a> WASI</h3><p>Wasm \u662F\u4E2D\u95F4\u8868\u793A\uFF0C\u5E26\u6765\u7684\u662F\u521B\u5EFA\u53EF\u79FB\u690D\u4EE3\u7801\u7684\u80FD\u529B\uFF0C\u8FD9\u610F\u5473\u7740\u7528\u4E0D\u540C\u8BED\u8A00\u7F16\u5199\u7684\u4EE3\u7801\u53EF\u4EE5\u5728\u5404\u79CD\u5E73\u53F0\u4E0A\u8FD0\u884C\u3002\u4E0D\u4EC5\u5982\u6B64\uFF0C\u8FD8\u6709\u5982\u4E0B\uFF1A</p><ul><li>\u5B89\u5168\uFF1A\u5728\u6C99\u76D2\u4E2D\u5B89\u5168\u8FD0\u884C\u4E0D\u53D7\u4FE1\u4EFB\u7684\u4EE3\u7801</li><li>\u5F00\u653E\uFF1A\u4EE5\u4E00\u79CD\u901A\u7528\u7684\u65B9\u5F0F\u5C06\u7A0B\u5E8F\u4E0E\u73AF\u5883\u4E92\u901A</li><li>\u53EF\u79FB\u690D\uFF1A\u4E0E\u67B6\u6784\u65E0\u5173</li><li>\u591A\u8BED\u8A00\uFF1A\u7531\u4E8E\u80FD\u591F\u4ECE\u591A\u79CD\u8BED\u8A00\u4E2D\u7F16\u8BD1\u51FA\u6765</li></ul><p>Wasm -&gt; outside the web</p><p>WASI: the WebAssembly system interface</p><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>',11),T={href:"https://webassembly.org/",target:"_blank",rel:"noopener noreferrer"},W=n("webassembly.org"),M={href:"https://developer.mozilla.org/zh-CN/docs/WebAssembly",target:"_blank",rel:"noopener noreferrer"},I=n("MDN WebAssembly"),q={href:"https://emscripten.org/docs/getting_started/index.html",target:"_blank",rel:"noopener noreferrer"},N=n("emscripten"),L={href:"https://hacks.mozilla.org/2019/03/standardizing-wasi-a-webassembly-system-interface/",target:"_blank",rel:"noopener noreferrer"},P=n("Standardizing WASI: A system interface to run WebAssembly outside the web"),R={href:"https://juejin.cn/post/6844903709806182413",target:"_blank",rel:"noopener noreferrer"},j=n("\u4E86\u89E3 wasm \u7684\u524D\u4E16\u4ECA\u751F");function D(K,V){const a=l("ExternalLinkIcon");return i(),r(c,null,[_,s("ul",null,[s("li",null,[g,s("ul",null,[s("li",null,[f,s("a",w,[v,e(a)]),y]),E])])]),A,s("p",null,[s("a",S,[x,e(a)])]),C,s("ul",null,[s("li",null,[s("a",T,[W,e(a)])]),s("li",null,[s("a",M,[I,e(a)])]),s("li",null,[s("a",q,[N,e(a)])]),s("li",null,[s("a",L,[P,e(a)])]),s("li",null,[s("a",R,[j,e(a)])])])],64)}var F=p(k,[["render",D],["__file","index.html.vue"]]);export{F as default};
